library(readr)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
View(mageck)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
ggplot(mageck, aes(x = neg|score, y = pos|score)) +
geom_point()
summary(mageck)
colnames(mageck,
c(id,
num,
neg.score,
neg.p_value,
neg.fdr,
neg.rank,
neg.goodsgrna,
neg.lfc,
pos.score,
pos.p_value,
pos.fdr,
pos.rank,
pos.goodsgrna,
pos.lfc))
colnames(mageck,
c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"pos.lfc"))
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"pos.lfc"
)
# view data summary
summary(mageck)
ggplot(mageck, aes(x = neg.score, y = pos.score)) +
geom_point()
ggplot(mageck, aes(x = neg.score, y = pos.score, alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.score)) +
geom_histogram()
ggplot(mageck, aes(x = neg.score)) +
geom_histogram(bins = 1000)
ggplot(mageck, aes(x = neg.score)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.score)) +
geom_histogram(bins = 500)
cor(mageck$neg.score, mageck$pos.score)
cor(log(mageck$neg.score), log(mageck$pos.score))
library(ggplot2)
ggplot(mageck, aes(x = neg.score, y = pos.score, alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.score)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.score)) +
geom_histogram(bins = 500)
cor(mageck$neg.score, mageck$pos.score)
library(ggplot2)
# Compare positive and negative group scores
ggplot(mageck, aes(x = neg.score, y = pos.score, alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.score)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.score)) +
geom_histogram(bins = 500)
cor(mageck$neg.score, mageck$pos.score)
# Compare positive and negative p-values
ggplot(mageck, aes(x = neg.p_value, y = pos.p_value, alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.p_value)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.p_value)) +
geom_histogram(bins = 500)
cor(mageck$neg.p_value, mageck$pos.p_value)
knitr::opts_chunk$set(echo = TRUE)
library(msigdr)
install.packages("msigdr")
install.packages("msigdbr")
library(msigdbr)
knitr::opts_chunk$set(echo = TRUE)
# Import MAGeCK data set
library(readr)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"pos.lfc"
)
# Convert goodsgrna to factor
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# view data summary
summary(mageck)
library(ggplot2)
# Compare positive and negative group scores
ggplot(mageck, aes(x = neg.score,
y = pos.score,
alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.score)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.score)) +
geom_histogram(bins = 500)
cor(mageck$neg.score, mageck$pos.score)
# Compare positive and negative p-values
ggplot(mageck, aes(x = neg.p_value,
y = pos.p_value,
alpha = 0.05)) +
geom_point()
ggplot(mageck, aes(x = neg.p_value)) +
geom_histogram(bins = 500)
ggplot(mageck, aes(x = pos.p_value)) +
geom_histogram(bins = 500)
cor(mageck$neg.p_value, mageck$pos.p_value)
histogram <- function(var){
ggplot(mageck, aes(x = var)) +
geom_histogram(bins = 500)
}
# Positive histograms
histogram(mageck$pos.score)
histogram(mageck$pos.p_value)
histogram(mageck$pos.fdr)
histogram(mageck$pos.lfc)
# Negative histograms
histogram(mageck$neg.score)
histogram(mageck$neg.p_value)
histogram(mageck$neg.fdr)
histogram(mageck$neg.lfc)
library(msigdbr)
?msigdbr
misgdbr_species()
msigdbr_species()
msigdbr(species = "Mus musculus")
msigdbr(species = "Mus musculus", category = "CP")
install.packages("GSEAbase")
install.packages("GSEABase")
install.packages("BiocManager")
BiocManager::install("GSEABase")
?getGMT
??getGMT
?getGmt
??getGMT
gmt <- scan("m2.cp.v2022.1.Mm.symbols.gmt")
gmt <- read.table("m2.cp.v2022.1.Mm.symbols.gmt", header=TRUE)
msigdbr(species = "Mus musculus")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
msigdbr(species = "Mus musculus", category = "C2", subcategory = "CGP")
library(msigdbr)
install.packages("GSEABase")
install.packages("BiocManager")
BiocManager::install("GSEABase")
install.packages("msigdbr")
library(msigdbr)
library(ggplot2)
install.packages("RTools")
install.RTools
knitr::opts_chunk$set(echo = TRUE)
library(msigdbr)
msigdbr(species = "Mus musculus", category = "C2", subcategory = "CGP")
install.packages("BiocManager")
BiocManager::install("GSEABase")
BiocManager::install("GSEABase", force = TRUE)
library(ggplot2)
library(msigdbr)
library(readr)
pathways <- read_delim("m2.cp.v2022.1.Mm.symbols.gmt",
delim = "\t", escape_double = FALSE,
col_names = FALSE, trim_ws = TRUE)
View(pathways)
library(readr)
pathways2 <- read_table("m2.cp.v2022.1.Mm.symbols.gmt",
col_names = FALSE)
View(pathways2)
install.packages("GSEABase")
??read.gmt
gmt <- as.list(csv)
csv <- read.csv("pathways.csv")
gmt <- as.list(csv)
str(gmt)
?as.list
install.packages("qusage")
gmt <- apply(csv, 1, as.list)
str(gmt)
View(csv)
csv <- read.csv("pathways.csv", header = FALSE)
View(csv)
gmt <- split(csv, 1:nrow(csv))
View(gmt)
gmt <- read.table("pathways.csv", fill = TRUE)
View(gmt)
gmt <- read.table("pathways.csv", fill = TRUE, stringsAsFactors = FALSE)
View(gmt)
names <- gmt[,-1]
gmt <- gmt[,-1]
View(gmt)
?scan
gmt <- read.table("pathways.csv", fill = TRUE, stringsAsFactors = FALSE)
View(gmt)
apply(gmt, 1, textConnection, open = "")
# names <- gmt[,-1]
# gmt <- gmt[,-1]
gmt <- scan("pathways.csv", what = "", sep = "\n")
pathways <- strsplit(gmt, "[[:space:]]+")
View(pathways)
pathways[[1]]
names(pathways) <- sapply(pathways, `[[`, 1)
source <- sapply(pathways, `[[`, 2)
names(pathways) <- sapply(pathways, `[[`, 1)
pathways <- lapply(pathways, `[`, -c(1:2))
pathways[[1]]
pathways <- strsplit(gmt, "[[:space:]]+")
#apply(gmt, 1, textConnection, open = "")
# names <- gmt[,-1]
# gmt <- gmt[,-1]
gmt <- scan("pathways.csv", what = "", sep = "\n")
pathways <- strsplit(gmt, "[[:space:]]+")
#apply(gmt, 1, textConnection, open = "")
# names <- gmt[,-1]
# gmt <- gmt[,-1]
gmt <- scan("m2.cp.v2022.1.Mm.symbols.gmt", what = "", sep = "\n")
pathways <- strsplit(gmt, "[[:space:]]+")
View(pathways)
pathways[[1]]
names(pathways) <- sapply(pathways, `[[`, 1)
pathways[[1]]
source <- sapply(pathways, `[[`, 2)
str(gmt)
pathways <- lapply(pathways, `[`, -c(1:2))
head(source)
names(pathways)
View(pathways)
View(pathways)
str(source)
View(source)
# Code adapted from https://stackoverflow.com/questions/6602881/text-file-to-list-in-r
# Read in data as list and split elements into strings
gmt <- scan("m2.cp.v2022.1.Mm.symbols.gmt", what = "", sep = "\n")
pathways <- strsplit(gmt, "[[:space:]]+")
# Assign first entry to names of each list element
names(pathways) <- sapply(pathways, `[[`, 1)
# save urls to separate list for reference
source <- sapply(pathways, `[[`, 2)
# Remove two beginning reference rows
pathways <- lapply(pathways, `[`, -c(1:2))
str(mageck)
??GSEABase
install.packages("GSEABase")
library(GSEABase)
ls("package:GSEABase")
gmt2 <- getGmt(gmt)
gmt2 <- getGmt("m2.cp.v2022.1.Mm.symbols.gmt")
View(gmt2)
