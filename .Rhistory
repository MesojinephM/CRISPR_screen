?order
knitr::opts_chunk$set(echo = TRUE)
lfc_sort <- mageck[order(mageck$lfc),]
head(lfc_sort)
View(lfc_sort[1:5,])
lfc_sort <- mageck[order(mageck$lfc, decreasing = TRUE),]
View(lfc_sort[1:5,])
mageck_lfc_sort <- lfc_sort[c(id, lfc),]
mageck_lfc_sort <- cbind(lfc_sort$id, lfc_sort$lfc)
head(mageck_lfc_sort)
install.packages("devtools")
library("devtools")
install_github("GSEA-MSigDB/GSEA_R")
3
table(pathways[1:5,])
?table
?tibble
knitr::opts_chunk$set(echo = TRUE)
view(mageck[1:5,])
View(mageck[1:5,])
View(mageck)
knitr::opts_chunk$set(echo = TRUE)
# Import MAGeCK data set
library(readr)
library(ggplot2)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"lfc"
)
# Convert goodsgrna to factor
mageck$num <- as.factor(mageck$num)
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# Delete neg.lfc
mageck <- mageck[,-8]
selection <- NULL
# Sort values based on p-values to see which selection p-value is lower
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
# Append to mageck data frame as factor
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# view data summary
summary(mageck)
View(mageck[1:5,])
table(mageck[1:5,])
as.table(mageck[1:5,])
as.data.table(mageck[1:5,])
knitr::kable(mageck[1:5,])
?kable
?GSEA
?GSEABase
example("GeneSet")
source(system.file('extdata', 'Run.GSEA.R', package = 'GSEA'))
?GSEA_R
?GSEABase
?`GSEABase-package`
ls("package:GSEABase")
library(BiocManager)
library(fgsea)
head(mageck_lfc_sort)
fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort[,1],
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
head(lfc_sort)
head(lfc_sort$id)
lfc_sort <- mageck[order(mageck$lfc, decreasing = TRUE),]
mageck_lfc_sort <- as.vector(lfc_sort$lfc)
names(mageck_lfc_sort) <- lfc_sort$id
class(mageck_lfc_sort)
str(mageck_lfc_sort)
fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort$V1,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
install.packages("GSEABase")
library(rmarkdown)
library(rmarkdown)
library(rmarkdown)
?xfun
??xfun
install.packages("xfun")
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
lfc_sort <- mageck[order(mageck$lfc, decreasing = TRUE),]
mageck_lfc_sort <- as.vector(lfc_sort$lfc)
names(mageck_lfc_sort) <- lfc_sort$id
library(BiocManager)
library(fgsea)
SampleES <- fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
SampleES
class(SampleES)
str(SampleES)
Sample2ES <- fgseaSimple(
pathways = pathways[1:10],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
Sample2ES
# Change `id` column to all lowercase characters
mageck$id <- tolower(mageck$id)
head(mageck$id)
str(pathways)
pathways <- lapply(pathways[-1], tolower)
head(pathways)
Sample2ES <- fgseaSimple(
pathways = pathways[1:10],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
Sample2ES
SampleES <- fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
SampleES
knitr::opts_chunk$set(echo = TRUE)
# Import MAGeCK data set
library(readr)
library(ggplot2)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"lfc"
)
# Change `id` column to all lowercase characters
mageck$id <- tolower(mageck$id)
# Convert goodsgrna to factor
mageck$num <- as.factor(mageck$num)
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# Delete neg.lfc
mageck <- mageck[,-8]
# view data summary
summary(mageck)
#### p-values
# Distribution of positive selection p-values
ggplot(mageck, aes(x = pos.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of positive selection p-values")
# Distribution of negative selection p-values
ggplot(mageck, aes(x = neg.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of negative selection p-values")
# Compare positive and negative p-values
ggplot(mageck, aes(x = neg.p_value,
y = pos.p_value,
alpha = 0.01)) +
geom_point() +
geom_vline(xintercept = 0.05,
color = "red") +
geom_hline(yintercept = 0.05,
color = "red") +
ggtitle("Comparison of positive and negative selection p-values") +
theme(legend.position="none")
library(ggpubr)
install.packages("vctrs")
update.packages("vctrs")
library(ggpubr)
?vctrs
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
?vctrs
update.packages("vctrs")
?vctrs
?vctrs
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
install.packages(c("cli", "colorspace", "digest", "dplyr", "fansi", "fastmap", "htmltools", "utf8", "vctrs"))
library(vctrs)
library(utf8)
remove.packages("vctrs")
remove.packages("utf8")
remove.packages("cli")
remove.packages("fastmap")
remove.packages("htmltools")
remove.packages("dplyr")
remove.packages("colorspace")
remove.packages("fansi")
remove.packages("digest")
install.packages("vctrs")
install.packages("vctrs")
install.packages("digest")
install.packages("htmltools")
install.packages("colormap")
install.packages("dplyr")
installed.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
# Import MAGeCK data set
library(readr)
install.packages("fansi")
# Import MAGeCK data set
library(readr)
install.packages("utf8")
# Import MAGeCK data set
library(readr)
library(ggplot2)
install.packages("colorspace")
# Import MAGeCK data set
library(readr)
library(ggplot2)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"lfc"
)
# Change `id` column to all lowercase characters
mageck$id <- tolower(mageck$id)
# Convert goodsgrna to factor
mageck$num <- as.factor(mageck$num)
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# Delete neg.lfc
mageck <- mageck[,-8]
# view data summary
summary(mageck)
#### p-values
# Distribution of positive selection p-values
ggplot(mageck, aes(x = pos.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of positive selection p-values")
# Distribution of negative selection p-values
ggplot(mageck, aes(x = neg.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of negative selection p-values")
# Compare positive and negative p-values
ggplot(mageck, aes(x = neg.p_value,
y = pos.p_value,
alpha = 0.01)) +
geom_point() +
geom_vline(xintercept = 0.05,
color = "red") +
geom_hline(yintercept = 0.05,
color = "red") +
ggtitle("Comparison of positive and negative selection p-values") +
theme(legend.position="none")
library(ggpubr)
####  False Discovery Rates
# Distribution of positive selection fdr
posfdr_plot <- ggplot(mageck, aes(x = pos.fdr)) +
geom_histogram(bins = 500) +
xlab("fdr") +
ggtitle("Distribution of positive selection fdr values")
# Distribution of negative selection fdr
negfdr_plot <- ggplot(mageck, aes(x = neg.fdr)) +
geom_histogram(bins = 500) +
xlab("fdr") +
ggtitle("Distribution of negative selection fdr values")
ggarrange(posfdr_plot, negfdr_plot)
# # Distribution of positive selection p-values
# ggplot(mageck, aes(x = pos.p_value)) +
#   geom_histogram(bins = 500) +
#   xlab("p-value") +
#   ggtitle("Distribution of positive selection p-values")
#
# # Distribution of negative selection p-values
# ggplot(mageck, aes(x = neg.p_value)) +
#   geom_histogram(bins = 500) +
#   xlab("p-value") +
#   ggtitle("Distribution of negative selection p-values")
# Compare positive and negative fdr's
ggplot(mageck, aes(x = neg.fdr,
y = pos.fdr,
alpha = 0.01)) +
geom_point() +
geom_vline(xintercept = 0.1,
color = "red") +
geom_hline(yintercept = 0.1,
color = "red") +
ggtitle("Comparison of positive and negative selection fdr values") +
theme(legend.position="none")
# Compare positive score and negative score
ggplot(mageck, aes(x = pos.score,
y = neg.score,
alpha = 0.01)) +
geom_density_2d_filled() +
ggtitle("Comparison of positive score and negative score")
#sig_negs <- na.omit(filter(mageck$neg.fdr, mageck$neg.fdr != 1))
#### log fold change
# Distribution of lfc (positive and negative values the same)
ggplot(mageck, aes(x = lfc)) +
geom_histogram(bins = 500) +
xlab("lfc") +
ggtitle("Distribution of log fold change for all genes")
# Check normality of variable
qqnorm(mageck$lfc, main = "Normality of log fold change")
qqline(mageck$lfc)
### number of sgRNA's
ggplot(mageck, aes(num)) +
geom_bar(aes(fill = num)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of number of guide RNAs used")
### goodsgrna
# positive selection
ggplot(mageck, aes(pos.goodsgrna)) +
geom_bar(aes(fill = pos.goodsgrna)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of negative selection `goodsgrna`")
# negative selection
ggplot(mageck, aes(neg.goodsgrna)) +
geom_bar(aes(fill = neg.goodsgrna)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of negative selection `goodsgrna`")
### number of sgRNA's
ggplot(mageck, aes(num)) +
geom_bar(aes(fill = num)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of number of guide RNAs used")
### goodsgrna
# positive selection
ggplot(mageck, aes(pos.goodsgrna)) +
geom_bar(aes(fill = pos.goodsgrna)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of negative selection `goodsgrna`")
# negative selection
ggplot(mageck, aes(neg.goodsgrna)) +
geom_bar(aes(fill = neg.goodsgrna)) +
geom_text(stat = 'count',
aes(label = after_stat(count)),
vjust = -0.5) +
ggtitle("Distribution of negative selection `goodsgrna`")
# Create correlation plot
library(corrplot)
cor.crispr <- cor(mageck[,-c(1,2,7,12)])
corrplot(cor.crispr,
method = "color")
# Plot lfc with pos and neg fdr
plot(mageck$neg.fdr,
mageck$lfc)
plot(mageck$pos.fdr,
mageck$lfc)
plot(mageck$neg.rank,
mageck$lfc)
plot(mageck$pos.rank,
mageck$lfc)
hist(mageck$lfc)
# Code adapted from https://stackoverflow.com/questions/6602881/text-file-to-list-in-r
# Read in pathways data as list and split elements into strings
gmt <- scan("m2.cp.v2022.1.Mm.symbols.gmt", what = "", sep = "\n")
pathways <- strsplit(gmt, "[[:space:]]+")
# Assign first entry to names of each list element
names(pathways) <- sapply(pathways, `[[`, 1)
# save urls to separate list for reference
source <- sapply(pathways, `[[`, 2)
# Change gene names to lowercase to reduce errors
pathways <- lapply(pathways[-1], tolower)
# Remove two beginning reference rows
pathways <- lapply(pathways, `[`, -c(1:2))
# Preview data set
head(pathways)
library(ggridges)
selection <- NULL
# Sort values based on p-values to see which selection p-value is lower
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
# Append to mageck data frame as factor
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density() +
ggtitle("Log fold change distribution for positive and negative selections")
# Create separate data frames for each positive and negative selection
#  and remove selection variable from each
positives <- mageck[mageck$selection == "positive", -14]
negatives <- mageck[mageck$selection == "negative", -14]
# Compare lfc in both groups
hist(positives$lfc)
hist(negatives$lfc)
summary(positives$lfc)
summary(negatives$lfc)
qqnorm(positives$lfc)
qqnorm(negatives$lfc)
t.test(negatives$lfc, positives$lfc)
lfc_sort <- mageck[order(mageck$lfc, decreasing = TRUE),]
mageck_lfc_sort <- as.vector(lfc_sort$lfc)
names(mageck_lfc_sort) <- lfc_sort$id
library(BiocManager)
library(fgsea)
SampleES <- fgseaSimple(
pathways = pathways[1:4],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
Sample2ES <- fgseaSimple(
pathways = pathways[1:10],
stats = mageck_lfc_sort,
nperm = 1000,
minSize = 5,
scoreType = "std",
gseaParam = 1
)
SampleES
Sample2ES
