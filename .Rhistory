theme(legend.position="none")
# Compare positive fdr and negative score
ggplot(mageck, aes(x = pos.fdr,
y = neg.score,
alpha = 0.01)) +
geom_density_2d_filled() +
ggtitle("Comparison of positive and negative selection fdr values") +
theme(legend.position="none")
# Compare positive fdr and negative score
ggplot(mageck, aes(x = pos.fdr,
y = neg.score,
alpha = 0.01)) +
geom_density_2d_filled() +
ggtitle("Comparison of positive fdr and negative score")
# Compare positive fdr and negative score
ggplot(mageck, aes(x = pos.score,
y = neg.score,
alpha = 0.01)) +
geom_density_2d_filled() +
ggtitle("Comparison of positive fdr and negative score")
####  False Discovery Rates
# Distribution of positive selection fdr
ggplot(mageck, aes(x = pos.fdr)) +
geom_histogram(bins = 500) +
xlab("fdr") +
ggtitle("Distribution of positive selection fdr values")
# Distribution of negative selection fdr
ggplot(mageck, aes(x = neg.fdr)) +
geom_histogram(bins = 500) +
xlab("fdr") +
ggtitle("Distribution of negative selection fdr values")
# Distribution of positive selection p-values
ggplot(mageck, aes(x = pos.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of positive selection p-values")
# Distribution of negative selection p-values
ggplot(mageck, aes(x = neg.p_value)) +
geom_histogram(bins = 500) +
xlab("p-value") +
ggtitle("Distribution of negative selection p-values")
# Compare positive and negative fdr's
ggplot(mageck, aes(x = neg.fdr,
y = pos.fdr,
alpha = 0.01)) +
geom_point() +
geom_vline(xintercept = 0.1,
color = "red") +
geom_hline(yintercept = 0.1,
color = "red") +
ggtitle("Comparison of positive and negative selection fdr values") +
theme(legend.position="none")
# Compare positive score and negative score
ggplot(mageck, aes(x = pos.score,
y = neg.score,
alpha = 0.01)) +
geom_density_2d_filled() +
ggtitle("Comparison of positive score and negative score")
#sig_negs <- na.omit(filter(mageck$neg.fdr, mageck$neg.fdr != 1))
mageck$selection <- NULL
selection <- rep("NA", length(mageck$id))
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
summary(selection)
selection <- as.factor(rep("NA", length(mageck$id)))
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
selection <- rep("NA", length(mageck$id))
selection[i] <- "negative"
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
head(selection)
print("Hello")
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
print("Hello")
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
print(c("Hello", i))
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
print(mageck$neg.p_value[i])
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
print(mageck$neg.p_value[i])
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
print(mageck$neg.p_value[i])
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
print(mageck$neg.p_value[i])
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
print(mageck$neg.p_value[i])
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
print(mageck$neg.p_value[i])
selection[i] <- "positive"
} else {
selection[i] <- "equal"
}
}
str(selection)
length(mageck$id)
selection[1] <- "negative"
str(selection)
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else {
selection[i] <- "positive"
}
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else {
selection[i] <- "positive"
}
}
str(selection)
selection <- rep(NULL, length(mageck$id))
str(selection)
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else {
selection[i] <- "positive"
}
}
str(selection)
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
str(selection)
for (i in length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
str(mageck)
if (mageck["neg.p_value",i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
$
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
selection[1] <- "negative"
if (mageck$neg.p_value[1] > mageck$pos.p_value[1]){
selection[1] <- "positive"
} else {
selection[1] <- "negative"
}
selection[1]
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[1] > mageck$pos.p_value[1]){
selection[1] <- "positive"
} else {
selection[1] <- "negative"
}
}
str(selection)
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[1] > mageck$pos.p_value[1]){
selection[1] <- "positive"
} else {
selection[1] <- "negative"
}
}
str(selection)
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
str(selection)
mageck$selection <- as.factor(selection)
summary(mageck$selection)
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else {
selection[i] <- "neither"
}
}
mageck$selection <- as.factor(selection)
summary(mageck$selection)
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else if (mageck$neg.p_value[i] < mageck$pos.p_value[i]){
selection[i] <- "negative"
} else {
selection[i] <- "neither"
}
}
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# Create separate data frames for each positive and negative selection
positives <- filter(mageck, mageck$selection == "positive")
str(positives)
head(positives)
head(mageck)
# Create separate data frames for each positive and negative selection
positives <- mageck[mageck$selection == "positive",]
head(positives)
negatives <- mageck[mageck$selection == "negative",]
head(negatives)
# Create separate data frames for each positive and negative selection
positives <- mageck[mageck$selection == "positive", -mageck$selection]
# Create separate data frames for each positive and negative selection
positives <- mageck[mageck$selection == "positive", -selection]
# Create separate data frames for each positive and negative selection
positives <- mageck[mageck$selection == "positive", -c("selection")]
# Create separate data frames for each positive and negative selection
positives <- mageck[mageck$selection == "positive", -15]
negatives <- mageck[mageck$selection == "negative", -15]
str(positives)
# Compare lfc in both groups
hist(positives$pos.lfc)
# Compare lfc in both groups
layout(1,2)
layout(1,2)
hist(positives$pos.lfc)
hist(negatives$neg.lfc)
layout(2,1)
# Compare lfc in both groups
hist(positives$pos.lfc)
hist(negatives$neg.lfc)
# Compare lfc in both groups
hist(positives$pos.lfc)
hist(negatives$neg.lfc)
summary(positives$pos.lfc)
summary(negatives$neg.lfc)
library(ggridges)
install.packages("ggridges")
library(ggridges)
?geom_density_ridges
# Compare lfc across selections
ggplot(mageck, mapping = aes(pos.lfc, group = selection)) +
geom_histogram()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
y = selection,
group = selection)) +
geom_ensity_ridges()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
y = selection,
group = selection)) +
geom_density_ridges()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
y = selection,
group = selection,
color = selection)) +
geom_density_ridges()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
y = selection,
group = selection,
fill = selection)) +
geom_density_ridges()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
group = selection,
fill = selection)) +
geom_density()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density()
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = pos.lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density() +
ggtitle("Log fold change distribution for positive and negative selections")
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"lfc"
)
# Convert goodsgrna to factor
mageck$num <- as.factor(mageck$num)
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# Delete neg.lfc
mageck <- mageck[,-8]
# view data summary
summary(mageck)
# Create correlation plot
library(corrplot)
cor.crispr <- cor(mageck[,-c(1,2,7,12)])
cor.crispr <- cor(mageck[,-c(1,2,7,13)])
head(mageck[,c(1, 2, 7, 13)])
head(mageck[,c(1, 2, 7, 12)])
# Import MAGeCK data set
library(readr)
library(ggplot2)
mageck <- read_delim("mageckRRA.gene_summary.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
# Reassign column names
colnames(mageck) <- c("id",
"num",
"neg.score",
"neg.p_value",
"neg.fdr",
"neg.rank",
"neg.goodsgrna",
"neg.lfc",
"pos.score",
"pos.p_value",
"pos.fdr",
"pos.rank",
"pos.goodsgrna",
"lfc"
)
# Convert goodsgrna to factor
mageck$num <- as.factor(mageck$num)
mageck$neg.goodsgrna <- as.factor(mageck$neg.goodsgrna)
mageck$pos.goodsgrna <- as.factor(mageck$pos.goodsgrna)
# Delete neg.lfc
mageck <- mageck[,-8]
# view data summary
summary(mageck)
#### log fold change
# Distribution of lfc (positive and negative values the same)
ggplot(mageck, aes(x = lfc)) +
geom_histogram(bins = 500) +
xlab("lfc") +
ggtitle("Distribution of log fold change for all genes")
# Check normality of variable
qqnorm(mageck$lfc, main = "Normality of log fold change")
qqline(mageck$lfc)
# Create correlation plot
library(corrplot)
cor.crispr <- cor(mageck[,-c(1,2,7,12)])
corrplot(cor.crispr,
method = "color")
# Plot lfc with pos and neg fdr
plot(mageck$neg.fdr,
mageck$lfc)
plot(mageck$pos.fdr,
mageck$lfc)
plot(mageck$neg.rank,
mageck$lfc)
plot(mageck$pos.rank,
mageck$lfc)
hist(mageck$lfc)
library(ggridges)
# Sort values based on p-values to see which selection p-value is lower
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
# Append to mageck data frame as factor
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density() +
ggtitle("Log fold change distribution for positive and negative selections")
# Create separate data frames for each positive and negative selection
#  and remove selection variable from each
positives <- mageck[mageck$selection == "positive", -15]
library(ggridges)
# Sort values based on p-values to see which selection p-value is lower
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
# Append to mageck data frame as factor
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density() +
ggtitle("Log fold change distribution for positive and negative selections")
# Create separate data frames for each positive and negative selection
#  and remove selection variable from each
positives <- mageck[mageck$selection == "positive", -14]
negatives <- mageck[mageck$selection == "negative", -14]
# Compare lfc in both groups
hist(positives$lfc)
hist(negatives$lfc)
summary(positives$lfc)
summary(negatives$lfc)
n(positives$lfc)
library(ggridges)
# Sort values based on p-values to see which selection p-value is lower
for (i in 1:length(mageck$id)){
if (mageck$neg.p_value[i] > mageck$pos.p_value[i]){
selection[i] <- "positive"
} else {
selection[i] <- "negative"
}
}
# Append to mageck data frame as factor
mageck$selection <- as.factor(selection)
summary(mageck$selection)
# Compare lfc across selections
ggplot(mageck, mapping = aes(x = lfc,
group = selection,
fill = selection,
alpha = 0.05)) +
geom_density() +
ggtitle("Log fold change distribution for positive and negative selections")
# Create separate data frames for each positive and negative selection
#  and remove selection variable from each
positives <- mageck[mageck$selection == "positive", -14]
negatives <- mageck[mageck$selection == "negative", -14]
# Compare lfc in both groups
hist(positives$lfc)
hist(negatives$lfc)
summary(positives$lfc)
summary(negatives$lfc)
qqnorm(positives$lfc)
qqnorm(negatives$lfc)
t.test(negatives$lfc, positives$lfc)
